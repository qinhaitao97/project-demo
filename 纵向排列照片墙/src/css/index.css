
* {
    margin: 0px;
    padding: 0px;
    list-style: none;
}

:root {
    width: 100%;
    height: 100%;
}

body {
    width: 100%;
    height: 100%;
    background-color: #000;
}

.wrapper {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
}

.wrapper .wall {
    display: flex;
    justify-content: space-between;
    width: 80%;
    height: 80%;
}

.wrapper .wall .grid {
    width: 16%;
    height: 100%;
    background-color: #333;
    border-radius: 20px;
    overflow: hidden;
    /* 点击关闭按钮后，盒子宽度和高度的过渡变换 */
    transition: width 0.5s linear, transform 0.7s linear 0.5s;
}

.active-wrapper .wall .active-grid {
    width: 100%;
    /* 盒子展开时，宽度的过渡变换 */
    transition: width 0.5s linear 0.5s;
}

.active-wrapper .grid:not(.active-grid) {
    width: 0;
    transform: rotateX(90deg);
    /* 被点击盒子展开时，其他盒子高度以及宽度的过渡变换 */
    transition: transform 0.7s linear, width 0.5s linear 0.7s;
}

.wrapper .wall .grid .item {
    position: relative;
    width: 100%;
    height: 100%;
    cursor: pointer;
    /* 实现高度逐渐变为0的效果，其实这样的方法高度并没有变为0，只是视觉上变成了0 */
    transform: translate3d(0, 100%, 0);
}

@keyframes up {
    to {
        transform: translate3d(0, 0, 0);
    }
}

/* 图片容器依次移入页面 */
.wrapper .wall .grid:nth-child(1) .item { animation: up 0.5s linear 0s forwards; }

.wrapper .wall .grid:nth-child(2) .item { animation: up 0.5s linear 0.2s forwards; }

.wrapper .wall .grid:nth-child(3) .item { animation: up 0.5s linear 0.4s forwards; }

.wrapper .wall .grid:nth-child(4) .item { animation: up 0.5s linear 0.6s forwards; }

.wrapper .wall .grid:nth-child(5) .item { animation: up 0.5s linear 0.8s forwards; }

.wrapper .wall .grid:nth-child(6) .item { animation: up 0.5s linear 1.0s forwards; }

.wrapper .wall .grid .item .bg {
    width: 100%;
    height: 100%;
    border-radius: 20px;
    background-size: cover;
    background-position: center center;
    opacity: 0.5;
}

.wrapper .wall .grid .item:hover .bg {
    opacity: 1;
    /* 鼠标悬停，图片提亮 */
    transition: opacity 0.2s linear;
}

.wrapper .wall .grid:nth-child(1) .item .bg { background-image: url('../img/1.jpg'); }

.wrapper .wall .grid:nth-child(2) .item .bg { background-image: url('../img/2.jpg'); }

.wrapper .wall .grid:nth-child(3) .item .bg { background-image: url('../img/3.jpg'); }

.wrapper .wall .grid:nth-child(4) .item .bg { background-image: url('../img/4.jpg'); }

.wrapper .wall .grid:nth-child(5) .item .bg { background-image: url('../img/5.jpg'); }

.wrapper .wall .grid:nth-child(6) .item .bg { background-image: url('../img/6.jpg'); }

.wrapper .wall .grid .item .header {
    position: absolute;
    top: 50px;
    left: 50%;
    transform: translate3d(-50%, 0, 0);
    width: 86.5%;
    height: 8%;
    opacity: 0;
    /* 图片关闭时图片上方的文字逐渐消失的过渡动画 */
    transition: opacity 0.3s linear;
}

.active-wrapper .wall .active-grid .item .header {
    opacity: 1;
    /* 图片展开时，图片上方文字逐渐显示的过渡动画 */
    transition: opacity 0.5s linear 1.2s;
}

.wrapper .wall .grid .item .header .title {
    position: absolute;
    top: 0px;
    left: 0px;
    font-size: 24px;
    color: #fff;
}

.wrapper .wall .grid .item .header .close {
    position: absolute;
    top: 0px;
    right: 0px;
    width: 30px;
    height: 30px;
}

.active-wrapper .wall .active-grid .item .close {
    transform: rotateZ(180deg);
    /* 图片展开时，关闭按钮自身旋转的过渡动画 */
    transition: transform 1s linear 1s;
}

/* 利用伪元素画关闭按钮 */
.wrapper .wall .grid .item .header .close::after {
    position: absolute;
    content: '';
    width: 30px;
    height: 4px;
    background-color: #fff;
    transform: translate(-2px, 14px) rotateZ(45deg);
}

.wrapper .wall .grid .item .header .close::before {
    position: absolute;
    content: '';
    width: 30px;
    height: 4px;
    background-color: #fff;
    transform: translate(-2px, 14px) rotateZ(-45deg);
}

.wrapper .wall .grid .item .desc {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    opacity: 1;
    /* 图片关闭后，图片中央文字逐渐显示的过渡动画 */
    transition: opacity 1s linear 0.5s;
}

.active-wrapper .wall .grid .item .desc {
    opacity: 0;
    /* 图片展开时，图片中间文字逐渐消失的过渡动画 */
    transition: opacity 0.3s linear;
}

.wrapper .wall .grid .item .desc span {
    font-size: 16px;
    font-weight: bold;
    color: #fff;
}

.wrapper .wall .grid .item:hover .desc span {
    font-size: 24px;
    /* 鼠标悬停时，文字变大的过渡动画 */
    transition: font-size 0.2s linear;
}